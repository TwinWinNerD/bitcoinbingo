<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>Bitcoin Bingo</title>
    <link href="/css/bootstrap.css" rel="stylesheet">
    <link href="/css/font-awesome.min.css" rel="stylesheet">
    <link href="/css/ball-roll.css" rel="stylesheet">
</head>
<body>

  <body>
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, filesin your `assets/linker/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/jquery-1.10.2.js"></script>
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/handlebars-1.1.2.js"></script>
    <script src="/js/dependencies/ember-1.5.0.js"></script>
    <script src="/js/dependencies/ember-data.js"></script>
    <script src="/js/dependencies/bootstrap.min.js"></script>
    <script src="/js/dependencies/ember-data-sails-adapter.js"></script>
    <script src="/js/dependencies/ember-simple-auth.js"></script>
    <script src="/js/dependencies/underscore-min.js"></script>
    <script src="/js/scripts/adapters/ApplicationAdapter.js"></script>
    <script src="/js/scripts/app.js"></script>
    <script src="/js/scripts/controllers/GameController.js"></script>
    <script src="/js/scripts/controllers/GamesController.js"></script>
    <script src="/js/scripts/controllers/LoginController.js"></script>
    <script src="/js/scripts/models/BingoCardModel.js"></script>
    <script src="/js/scripts/models/GameModel.js"></script>
    <script src="/js/scripts/models/TableModel.js"></script>
    <script src="/js/scripts/models/UserModel.js"></script>
    <script src="/js/scripts/routes/ApplicationRoute.js"></script>
    <script src="/js/scripts/routes/GamesRoute.js"></script>
    <script src="/js/scripts/routes/LoginRoute.js"></script>
    <script src="/js/scripts/serializers/ApplicationSerializer.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
